name: Build
permissions:
  contents: write
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  #----------------------------------------------------------------
  prepare:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ github.run_number }}
      version: ${{ steps.project.outputs.version }}-${{ github.run_number }}
      name: ${{ steps.project.outputs.name }}
    steps:
      #------------------------------------------------------------
      # Checkout the repository
      #------------------------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
      #------------------------------------------------------------
      - name: Project
        id: project
        run: |
          echo "name=$(./scripts/get.property.sh --property name --file ./project.properties)" >> "$GITHUB_OUTPUT"
          echo "version=$(./scripts/get.property.sh --property version --file ./project.properties)" >> "$GITHUB_OUTPUT"

      #------------------------------------------------------------
      - name: üì• Info üì•
        run: |
          VERSION_FULL=${{ steps.project.outputs.version }}-${{ github.run_number }}
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "### BUILD INFO" >> $GITHUB_STEP_SUMMARY
          echo "| Name          | Value                              |" >> $GITHUB_STEP_SUMMARY
          echo "| :------------ | :--------------------------------- |" >> $GITHUB_STEP_SUMMARY
          echo "| project       | ${{ steps.project.outputs.name }}  |" >> $GITHUB_STEP_SUMMARY | cat
          echo "| version       | $VERSION_FULL                      |" >> $GITHUB_STEP_SUMMARY | cat
          echo "| branch        | ${{ github.ref }}                  |" >> $GITHUB_STEP_SUMMARY | cat
          echo "| sha           | ${{ github.sha }}                  |" >> $GITHUB_STEP_SUMMARY | cat
          echo "| build         | ${{ github.run_number }}           |" >> $GITHUB_STEP_SUMMARY | cat
          echo "---" >> $GITHUB_STEP_SUMMARY
  #----------------------------------------------------------------
  build_linux:
    name: üß± Build For Linux üß±
    needs:
      - prepare
    uses: ./.github/workflows/action-build-and-release.yml
    with:
      ext: ""
      os-short: linux
      os: ubuntu-22.04
    secrets: inherit
  #----------------------------------------------------------------
  build_windows:
    name: üß± Build For Windows üß±
    needs:
      - prepare
    uses: ./.github/workflows/action-build-and-release.yml
    with:
      ext: ".exe"
      os-short: windows
      os: windows-latest
    secrets: inherit
  #----------------------------------------------------------------
  build_macos:
    name: üß± Build For MacOS üß±
    needs:
      - prepare
    uses: ./.github/workflows/action-build-and-release.yml
    with:
      ext: ""
      os-short: macos
      os: macos-latest
    secrets: inherit
  #----------------------------------------------------------------
  release:
    name: üöÄ Release üöÄ
    needs:
      - prepare
      - build_linux
      - build_windows
      - build_macos
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------------------------
      - name: Download Linux Binary
        uses: actions/download-artifact@v4
        with:
          name: cenv-linux
          path: build/linux/
      #----------------------------------------------------------------
      - name: Download Windows Binary
        uses: actions/download-artifact@v4
        with:
          name: cenv-windows
          path: build/windows/
      #----------------------------------------------------------------
      - name: Download MacOS Binary
        uses: actions/download-artifact@v4
        with:
          name: cenv-macos
          path: build/macos/
      #----------------------------------------------------------------
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ needs.prepare.outputs.version }}"
          release_name: "Release v${{ needs.prepare.outputs.version }}"
          body: |
            Automated release for the latest push to master.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #----------------------------------------------------------------
      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux/cenv
          asset_name: cenv_linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #----------------------------------------------------------------
      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/cenv.exe
          asset_name: cenv_windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #----------------------------------------------------------------
      - name: Upload MacOS Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/macos/cenv
          asset_name: cenv_macos
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #----------------------------------------------------------------
  final:
    name: üèÅ Final üèÅ
    runs-on: ubuntu-latest
    needs: release
    steps:
      #------------------------------------------------------------
      # Checkout the repository
      #------------------------------------------------------------
      - run: echo "Final step"
